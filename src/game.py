from infrastructure import Infrastructurefrom constants import *from global_game import GlobalGameclass Game:    def __init__(self, infrastructure:Infrastructure):        self.is_running = True        self.infrastructure = infrastructure        self.game = GlobalGame()        self.game_over = False    def process_events(self):        if self.infrastructure.is_quit_event():            self.is_running = False    def render(self):        self.infrastructure.fill_screen()        self.infrastructure.draw_game_lines((WIDTH // 2, HEIGHT // 2), GLOBAL_GAME_LINE_COLOR, 2, 4)        for local_game in self.game.local_game_list:            self.infrastructure.draw_game_lines((local_game[4].x, local_game[4].y) , LOCAL_GAME_LINE_COLOR, 2, 1)            for el in local_game:                self.infrastructure.draw_element((el.x, el.y))                if el.value == 1:                    self.infrastructure.draw_cross((el.x, el.y))                elif el.value == -1:                    self.infrastructure.draw_circle((el.x, el.y))    def update_state(self):        pass    def loop(self):        while self.is_running:            self.process_events()            self.update_state()            self.render()        self.infrastructure.quit()